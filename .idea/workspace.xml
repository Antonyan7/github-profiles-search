<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f028c860-4140-4264-8992-f2953619fa68" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/jsLinters/eslint.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/Icons/DarkIcon.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/Icons/LightIcon.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/shared/Button.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/shared/DarkModeToggle.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/button.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postcss.config.mjs" beforeDir="false" afterPath="$PROJECT_DIR$/postcss.config.mjs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/public/file.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/globe.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/next.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/vercel.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/public/window.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/LayoutWrapper.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/LayoutWrapper.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/globals.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/layout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/profile/[username]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/profile/[username]/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/DarkModeToggle/DarkModeToggle.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/GithubUserList/GithubUserList.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/user/GithubUserList.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Icons/Loader.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Icons/Loader.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/PaginationControls/PaginationControls.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/shared/PaginationControls.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/ui/button.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/ui/input.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/shared/Input.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/redux/slices/githubSearch/initialState.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/redux/slices/githubSearch/initialState.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/redux/slices/githubSearch/middleware.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/redux/slices/githubSearch/middleware.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/redux/slices/githubSearch/reducers.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/redux/slices/githubSearch/reducers.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/redux/slices/githubSearch/selector.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/redux/slices/githubSearch/selector.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/redux/store.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/redux/store.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tailwind.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/tailwind.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2yPTOqVtpR0WcQ0KWCsB9jvdRTa" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "feature/light-dark-mode",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/davidmovsesyan/Desktop/github-profile-viewer/node_modules/prettier",
    "settings.editor.selected.configurable": "settings.javascript.prettier",
    "ts.external.directory.path": "/Users/davidmovsesyan/Desktop/github-profile-viewer/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/components/user" />
      <recent name="$PROJECT_DIR$/components/ui" />
      <recent name="$PROJECT_DIR$/components" />
      <recent name="$PROJECT_DIR$/src/redux/slices/githubSearch" />
      <recent name="$PROJECT_DIR$/src/app" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="dev" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.dev" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f028c860-4140-4264-8992-f2953619fa68" name="Changes" comment="" />
      <created>1749735180903</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749735180903</updated>
      <workItem from="1749735182755" duration="22136000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>